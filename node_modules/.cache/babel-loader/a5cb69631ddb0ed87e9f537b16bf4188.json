{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\New PM\\\\pwmanagerui\\\\src\\\\components\\\\home.component.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport MyForm from './myform.component';\nimport PasswordList from './passwordlist.component';\nimport Loader from './loader.component';\nexport default class Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      passwords: [],\n      password: {},\n      loader: false,\n      url: \"passwords\"\n    };\n\n    this.getPasswords = async () => {\n      axios.defaults.headers.common['Authorization'] = 'Bearer ' + localStorage.getItem('token');\n      this.setState({\n        loader: true\n      });\n      const passwords = await axios.get(this.state.url);\n      this.setState({\n        passwords: passwords.data,\n        loader: false\n      });\n    };\n\n    this.deletePassword = async id => {\n      this.setState({\n        loader: true\n      });\n      await axios.delete(`${this.state.url}/${id}`);\n      this.getPasswords();\n    };\n\n    this.createPassword = async data => {\n      this.setState({\n        loader: true\n      });\n      await axios.post(this.state.url, {\n        platform: data.platform,\n        email: data.email,\n        password: data.password,\n        description: data.description\n      });\n      this.getPasswords();\n    };\n\n    this.editPassword = async data => {\n      this.setState({\n        password: {},\n        loader: true\n      });\n      await axios.put(`${this.state.url}/${data.id}`, {\n        platform: data.platform,\n        email: data.email,\n        password: data.password,\n        description: data.description\n      });\n      this.getPasswords();\n    };\n\n    this.onDelete = id => {\n      //console.log('app',id)\n      this.deletePassword(id);\n    };\n\n    this.onEdit = data => {\n      //console.log('app',data)\n      this.setState({\n        password: data\n      });\n    };\n\n    this.onFormSubmit = data => {\n      //console.log('app', data);\n      if (data.isEdit) {\n        this.editPassword(data);\n      } else {\n        this.createPassword(data);\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.getPasswords(); //localStorage.getItem()\n  }\n\n  render() {\n    if (this.props.user) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ui main container\",\n          children: [/*#__PURE__*/_jsxDEV(MyForm, {\n            onFormSubmit: this.onFormSubmit,\n            password: this.state.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), this.state.loader ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 46\n          }, this) : \"\", /*#__PURE__*/_jsxDEV(PasswordList, {\n            passwords: this.state.passwords,\n            onDelete: this.onDelete,\n            onEdit: this.onEdit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"not-loggedin\",\n        children: \"You are not logged in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}","map":{"version":3,"sources":["E:/New PM/pwmanagerui/src/components/home.component.js"],"names":["React","Component","axios","MyForm","PasswordList","Loader","Home","state","passwords","password","loader","url","getPasswords","defaults","headers","common","localStorage","getItem","setState","get","data","deletePassword","id","delete","createPassword","post","platform","email","description","editPassword","put","onDelete","onEdit","onFormSubmit","isEdit","componentDidMount","render","props","user"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport MyForm from './myform.component';\r\nimport PasswordList from './passwordlist.component';\r\nimport Loader from './loader.component';\r\n\r\nexport default class Home extends Component {\r\n\r\n    state = {\r\n        passwords: [],\r\n        password: {},\r\n        loader: false,\r\n        url: \"passwords\",\r\n    };\r\n\r\n    getPasswords = async () => {\r\n        axios.defaults.headers.common['Authorization'] = 'Bearer ' + localStorage.getItem('token');\r\n        this.setState({ loader: true });\r\n        const passwords = await axios.get(this.state.url,);\r\n        this.setState({ passwords: passwords.data, loader: false });\r\n    };\r\n\r\n    deletePassword = async id => {\r\n        this.setState({ loader: true });\r\n        await axios.delete(`${this.state.url}/${id}`);\r\n\r\n        this.getPasswords();\r\n    };\r\n\r\n    createPassword = async data => {\r\n        this.setState({ loader: true });\r\n\r\n        await axios.post(this.state.url, {\r\n            platform: data.platform,\r\n            email: data.email,\r\n            password: data.password,\r\n            description: data.description\r\n        });\r\n\r\n        this.getPasswords();\r\n    };\r\n\r\n\r\n    editPassword = async data => {\r\n        this.setState({ password: {}, loader: true });\r\n\r\n        await axios.put(`${this.state.url}/${data.id}`, {\r\n            platform: data.platform,\r\n            email: data.email,\r\n            password: data.password,\r\n            description: data.description\r\n        });\r\n        this.getPasswords();\r\n    };\r\n\r\n\r\n    componentDidMount() {\r\n        this.getPasswords();\r\n        //localStorage.getItem()\r\n    };\r\n\r\n    onDelete = id => {\r\n        //console.log('app',id)\r\n        this.deletePassword(id);\r\n    };\r\n\r\n    onEdit = data => {\r\n        //console.log('app',data)\r\n        this.setState({ password: data });\r\n    };\r\n\r\n    onFormSubmit = data => {\r\n        //console.log('app', data);\r\n\r\n        if (data.isEdit) {\r\n            this.editPassword(data);\r\n        }\r\n        else {\r\n            this.createPassword(data);\r\n        }\r\n    };\r\n\r\n    render() {\r\n\r\n        if (this.props.user) {\r\n            return (\r\n                <div>\r\n                    <div className=\"ui main container\">\r\n                        <MyForm\r\n                            onFormSubmit={this.onFormSubmit}\r\n                            password={this.state.password}\r\n\r\n                        />\r\n                        {this.state.loader ? <Loader /> : \"\"}\r\n                        <PasswordList\r\n                            passwords={this.state.passwords}\r\n                            onDelete={this.onDelete}\r\n                            onEdit={this.onEdit}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n            )\r\n        } else {\r\n            return (\r\n                <h2 className=\"not-loggedin\" >You are not logged in</h2>\r\n            )\r\n\r\n        }\r\n\r\n\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}