{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\New PM\\\\pwmanagerui\\\\src\\\\components\\\\home.component.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport MyForm from './myform.component';\nimport PasswordList from './passwordlist.component';\nimport Loader from './loader.component';\nimport \"E:\\New PM\\pwmanagerui\\src\\App.css\";\nexport default class Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      passwords: [],\n      password: {},\n      loader: false,\n      url: \"passwords\"\n    };\n\n    this.getPasswords = async () => {\n      this.setState({\n        loader: true\n      });\n      const passwords = await axios.get(this.state.url);\n      this.setState({\n        passwords: passwords.data,\n        loader: false\n      });\n    };\n\n    this.deletePassword = async id => {\n      this.setState({\n        loader: true\n      });\n      await axios.delete(`${this.state.url}/${id}`);\n      this.getPasswords();\n    };\n\n    this.createPassword = async data => {\n      this.setState({\n        loader: true\n      });\n      await axios.post(this.state.url, {\n        platform: data.platform,\n        email: data.email,\n        password: data.password,\n        description: data.description\n      });\n      this.getPasswords();\n    };\n\n    this.editPassword = async data => {\n      this.setState({\n        password: {},\n        loader: true\n      });\n      await axios.put(`${this.state.url}/${data.id}`, {\n        platform: data.platform,\n        email: data.email,\n        password: data.password,\n        description: data.description\n      });\n      this.getPasswords();\n    };\n\n    this.onDelete = id => {\n      //console.log('app',id)\n      this.deletePassword(id);\n    };\n\n    this.onEdit = data => {\n      //console.log('app',data)\n      this.setState({\n        password: data\n      });\n    };\n\n    this.onFormSubmit = data => {\n      //console.log('app', data);\n      if (data.isEdit) {\n        this.editPassword(data);\n      } else {\n        this.createPassword(data);\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.getPasswords();\n  }\n\n  render() {\n    if (this.props.user) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui main container\",\n        children: [/*#__PURE__*/_jsxDEV(MyForm, {\n          onFormSubmit: this.onFormSubmit,\n          password: this.state.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), this.state.loader ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 42\n        }, this) : \"\", /*#__PURE__*/_jsxDEV(PasswordList, {\n          passwords: this.state.passwords,\n          onDelete: this.onDelete,\n          onEdit: this.onEdit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"You are not logged in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["E:/New PM/pwmanagerui/src/components/home.component.js"],"names":["React","Component","axios","MyForm","PasswordList","Loader","Home","state","passwords","password","loader","url","getPasswords","setState","get","data","deletePassword","id","delete","createPassword","post","platform","email","description","editPassword","put","onDelete","onEdit","onFormSubmit","isEdit","componentDidMount","render","props","user"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport MyForm from './myform.component';\r\nimport PasswordList from './passwordlist.component';\r\nimport Loader from './loader.component';\r\nimport \"E:\\New PM\\pwmanagerui\\src\\App.css\";\r\n\r\nexport default class Home extends Component {\r\n\r\n    state = {\r\n        passwords: [],\r\n        password: {},\r\n        loader: false,\r\n        url: \"passwords\"\r\n    };\r\n\r\n    getPasswords = async () => {\r\n        this.setState({ loader: true });\r\n        const passwords = await axios.get(this.state.url);\r\n        this.setState({ passwords: passwords.data, loader: false });\r\n    };\r\n\r\n    deletePassword = async id => {\r\n        this.setState({ loader: true });\r\n        await axios.delete(`${this.state.url}/${id}`);\r\n\r\n        this.getPasswords();\r\n    };\r\n\r\n    createPassword = async data => {\r\n        this.setState({ loader: true });\r\n\r\n        await axios.post(this.state.url, {\r\n            platform: data.platform,\r\n            email: data.email,\r\n            password: data.password,\r\n            description: data.description\r\n        });\r\n\r\n        this.getPasswords();\r\n    };\r\n\r\n\r\n    editPassword = async data => {\r\n        this.setState({ password: {}, loader: true });\r\n\r\n        await axios.put(`${this.state.url}/${data.id}`, {\r\n            platform: data.platform,\r\n            email: data.email,\r\n            password: data.password,\r\n            description: data.description\r\n        });\r\n        this.getPasswords();\r\n    };\r\n\r\n\r\n    componentDidMount() {\r\n        this.getPasswords();\r\n    };\r\n\r\n    onDelete = id => {\r\n        //console.log('app',id)\r\n        this.deletePassword(id);\r\n    };\r\n\r\n    onEdit = data => {\r\n        //console.log('app',data)\r\n        this.setState({ password: data });\r\n    };\r\n\r\n    onFormSubmit = data => {\r\n        //console.log('app', data);\r\n\r\n        if (data.isEdit) {\r\n            this.editPassword(data);\r\n        }\r\n        else {\r\n            this.createPassword(data);\r\n        }\r\n    };\r\n\r\n    render() {\r\n\r\n        if (this.props.user) {\r\n            return (\r\n                <div className=\"ui main container\">\r\n                    <MyForm\r\n                        onFormSubmit={this.onFormSubmit}\r\n                        password={this.state.password}\r\n\r\n                    />\r\n                    {this.state.loader ? <Loader /> : \"\"}\r\n                    <PasswordList\r\n                        passwords={this.state.passwords}\r\n                        onDelete={this.onDelete}\r\n                        onEdit={this.onEdit}\r\n                    />\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <h2>You are not logged in</h2>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}